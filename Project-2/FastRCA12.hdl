/*

Sameer Hussain
CSCE 312-200

Feb 25th, 2021

*/

/**
 * Optimizes the carry propagation delay along RCA4 boundaries
 * using duplication and parallel assembly of logic 
 * The chip performs out=a+b
 * Both inputs a and b are in UNSIGNED format
 * carry output reflects the overflow 
 */


CHIP FastRCA12 {

    IN a[12], b[12];

    OUT out[12], carry;

    PARTS:

    Not(in=a[0], out=notA);

    And(a=notA, b=a[0], out=bitzero);

    Or(a=notA, b=a[0], out=bitone);

// have to do out=a+b
    RCA4(a=a[0..3], b=b[0..3], cin=bitzero, out=out[0..3], carry=car1);
    
    RCA4(a=a[4..7], b=b[4..7], cin=bitzero, out=carout2, carry=carr2);

    RCA4(a=a[4..7], b=b[4..7], cin=bitone, out=cout12, carry=car12);

    RCA4(a=a[8..11], b=b[8..11], cin=bitzero, out=carout3, carry=car3);

    RCA4(a=a[8..11], b=b[8..11], cin=bitone, out=carryoutput3, carry=c3);

// multiplexer to carry output that reflects the overflow 
    Mux16(a[0..3]=carout2, a[4]=carr2, b[0..3]=cout12, b[4]=car12, sel=car1, out[0..3]=out[4..7], out[4]=c2);
    
    Mux16(a[0..3]=carout3, a[4]=car3, b[0..3]=carryoutput3, b[4]=c3, sel=c2, out[0..3]=out[8..11], out[4]=carry);
}